"""Inital migration

Revision ID: d57d80afb9a9
Revises: 
Create Date: 2025-07-25 03:14:40.386020

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd57d80afb9a9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('booking',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('client_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('service_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('owner_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'CANCELLED', 'COMPLETED', name='bookingstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('estimated_price', sa.Float(), nullable=True),
    sa.Column('final_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('customer_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('order_type', sa.Enum('PICKUP', 'DELIVERY', 'DINE_IN', 'ONLINE', 'IN_STORE', 'SERVICE', name='ordertype'), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('service_fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tip_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'IN_PROGRESS', 'READY', 'COMPLETED', 'CANCELLED', 'REFUNDED', name='orderstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('special_instructions', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('reference_number', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('payment_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('promo_code', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('business_notes', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orderitem',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('item_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('item_description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('item_category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('customizations', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('item_notes', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('item_reference', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orderitem')
    op.drop_table('order')
    op.drop_table('booking')
    op.drop_table('user')
    # ### end Alembic commands ###
